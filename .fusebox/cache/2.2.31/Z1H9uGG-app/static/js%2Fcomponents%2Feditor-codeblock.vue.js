module.exports = { contents: "var _p = {};\nvar _v = function(exports){\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar codeEditor;\nvar ace;\nexports.default = {\n    name: 'editor-codeblock',\n    data: function () {\n        return {\n            modes: [],\n            modeSelected: 'text',\n            modelistLoaded: [],\n            isLoading: false\n        };\n    },\n    computed: {\n        content: function () {\n            return this.$store.state.editorCodeblock.content;\n        },\n        isShown: function () {\n            return this.$store.state.editorCodeblock.shown;\n        }\n    },\n    watch: {\n        modeSelected: function (val, oldVal) {\n            this.loadMode(val);\n        }\n    },\n    methods: {\n        init: function () {\n            var self = this;\n            self._.delay(function () {\n                codeEditor = ace.edit('codeblock-editor');\n                codeEditor.setTheme('ace/theme/tomorrow_night');\n                codeEditor.getSession().setMode('ace/mode/' + self.modeSelected);\n                codeEditor.setOption('fontSize', '14px');\n                codeEditor.setOption('hScrollBarAlwaysVisible', false);\n                codeEditor.setOption('wrap', true);\n                codeEditor.setOption('useSoftTabs', true);\n                codeEditor.setOption('tabSize', 2);\n                codeEditor.setOption('showPrintMargin', false);\n                codeEditor.setValue(self.content);\n                codeEditor.focus();\n                codeEditor.renderer.updateFull();\n            }, 100);\n        },\n        loadMode: function (m) {\n            var _this = this;\n            var self = this;\n            if (self._.includes(self.modelistLoaded, m)) {\n                codeEditor.getSession().setMode('ace/mode/' + m);\n            }\n            else {\n                self.isLoading = true;\n                self.$http.get('/js/ace/mode-' + m + '.js').then(function (resp) {\n                    if (resp.ok) {\n                        eval(resp.bodyText);\n                        self.modelistLoaded.push(m);\n                        ace.acequire('ace/mode/' + m);\n                        codeEditor.getSession().setMode('ace/mode/' + m);\n                        self._.delay(function () { self.isLoading = false; }, 500);\n                    }\n                    else {\n                        _this.$store.dispatch('alert', {\n                            style: 'red',\n                            icon: 'ui-2_square-remove-09',\n                            msg: self.$t('editor.codeblockloadingerror')\n                        });\n                    }\n                }).catch(function (err) {\n                    _this.$store.dispatch('alert', {\n                        style: 'red',\n                        icon: 'ui-2_square-remove-09',\n                        msg: 'Error: ' + err.body.msg\n                    });\n                });\n            }\n        },\n        cancel: function () {\n            codeEditor.destroy();\n            this.$store.dispatch('editorCodeblock/close');\n        },\n        insertCode: function () {\n            var codeBlockText = '\\n```' + this.modeSelected + '\\n' + codeEditor.getValue() + '\\n```\\n';\n            this.$store.dispatch('editor/insert', codeBlockText);\n            this.$store.dispatch('alert', {\n                style: 'blue',\n                icon: 'files_archive-3d-check',\n                msg: this.$t('editor.codeblocksuccess')\n            });\n            this.cancel();\n        }\n    },\n    mounted: function () {\n        var _this = this;\n        FuseBox.import('/js/ace/ace.js', function (acePkg) {\n            ace = acePkg;\n            _this.modes = ace.acequire('ace/ext/modelist').modesByName;\n        });\n        this.$root.$on('editorCodeblock/init', this.init);\n    }\n};\n\n};\n_p.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"duration\":400}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShown),expression:\"isShown\"}],staticClass:\"modal\"},[_c('transition',{attrs:{\"name\":\"modal-background\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShown),expression:\"isShown\"}],staticClass:\"modal-background\"})]),_c('div',{staticClass:\"modal-container\"},[_c('transition',{attrs:{\"name\":\"modal-content\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShown),expression:\"isShown\"}],staticClass:\"modal-content is-expanded\"},[_c('header',{staticClass:\"is-green\"},[_c('span',[_vm._v(_vm._s(_vm.$t('editor.codeblocktitle')))]),_c('p',{staticClass:\"modal-notify\",class:{ \"is-active\": _vm.isLoading }},[_c('span',[_vm._v(_vm._s(_vm.$t('editor.codeblockloading', { name: _vm.modeSelected })))]),_c('i')])]),_c('section',{staticClass:\"is-gapless\"},[_c('div',{staticClass:\"columns is-stretched\"},[_c('div',{staticClass:\"column is-one-quarter modal-sidebar is-green\",staticStyle:{\"max-width\":\"350px\"}},[_c('div',{staticClass:\"model-sidebar-header\"},[_vm._v(_vm._s(_vm.$t('editor.codeblocklanguage')))]),_c('div',{staticClass:\"model-sidebar-content\"},[_c('p',{staticClass:\"control is-fullwidth\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeSelected),expression:\"modeSelected\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modeSelected=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.modes),function(mode){return _c('option',{domProps:{\"value\":mode.name}},[_vm._v(_vm._s(mode.caption))])}))])])]),_c('div',{staticClass:\"column ace-container\"},[_c('div',{attrs:{\"id\":\"codeblock-editor\"}})])])]),_c('footer',[_c('a',{staticClass:\"button is-grey is-outlined\",on:{\"click\":_vm.cancel}},[_vm._v(_vm._s(_vm.$t('editor.discard')))]),_c('a',{staticClass:\"button is-green\",on:{\"click\":_vm.insertCode}},[_vm._v(_vm._s(_vm.$t('editor.codeblockinsert')))])])])])],1)],1)])}\n_p.staticRenderFns = [  ];\nvar _e = {}; _v(_e); Object.assign(_e.default.options||_e.default, _p)\nmodule.exports = _e\n    ",
dependencies: [],
sourceMap: {},
headerContent: undefined,
mtime: 1548128996000,
devLibsRequired : undefined
};