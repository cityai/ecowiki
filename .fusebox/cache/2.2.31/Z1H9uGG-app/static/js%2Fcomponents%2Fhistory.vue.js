module.exports = { contents: "var _p = {};\nvar _v = function(exports){\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar diffui;\nvar diffuiIsReady = false;\nexports.default = {\n    name: 'history',\n    props: ['currentPath', 'historyData'],\n    data: function () {\n        return {\n            versions: [],\n            current: {},\n            diffui: {},\n            sidebyside: true\n        };\n    },\n    watch: {\n        sidebyside: function () {\n            this.draw();\n        }\n    },\n    methods: {\n        compareWith: function () {\n            this.$store.dispatch('alert', {\n                style: 'purple',\n                icon: 'objects_astronaut',\n                msg: 'Sorry, this function is not available. Coming soon!'\n            });\n        },\n        view: function () {\n            this.$store.dispatch('alert', {\n                style: 'purple',\n                icon: 'objects_astronaut',\n                msg: 'Sorry, this function is not available. Coming soon!'\n            });\n        },\n        revertToVersion: function () {\n            this.$store.dispatch('alert', {\n                style: 'purple',\n                icon: 'objects_astronaut',\n                msg: 'Sorry, this function is not available. Coming soon!'\n            });\n        },\n        draw: function () {\n            if (diffuiIsReady) {\n                diffui.draw('#diff', {\n                    inputFormat: 'diff',\n                    outputFormat: this.sidebyside ? 'side-by-side' : 'line-by-line',\n                    matching: 'words',\n                    synchronisedScroll: true\n                });\n            }\n        },\n        changeCommit: function (cm) {\n            var self = this;\n            diffuiIsReady = false;\n            self.current = cm;\n            self.$http.post(siteRoot + '/hist', {\n                path: self.currentPath,\n                commit: cm.commit\n            }).then(function (resp) {\n                return resp.json();\n            }).then(function (resp) {\n                diffui = new Diff2HtmlUI({ diff: resp.diff });\n                diffuiIsReady = true;\n                self.draw();\n            }).catch(function (err) {\n                console.log(err);\n                self.$store.dispatch('alert', {\n                    style: 'red',\n                    icon: 'ui-2_square-remove-09',\n                    msg: 'Error: ' + err.body.error\n                });\n            });\n        }\n    },\n    mounted: function () {\n        this.versions = JSON.parse(this.historyData);\n        this.changeCommit(this.versions[0]);\n    }\n};\n\n};\n_p.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container is-fluid\"},[_c('div',{staticClass:\"columns is-gapless\"},[_c('div',{staticClass:\"column is-narrow is-hidden-touch sidebar\"},[_c('aside',{staticClass:\"stickyscroll\"},[_c('div',{staticClass:\"sidebar-label\"},[_c('span',[_vm._v(_vm._s(_vm.$t('history.pastversions')))])]),_c('ul',{staticClass:\"sidebar-menu\"},_vm._l((_vm.versions),function(item){return _c('li',[_c('a',{staticClass:\"is-multiline\",class:{ \"is-active\": item.commit === _vm.current.commit },attrs:{\"title\":item.dateFull},on:{\"click\":function($event){_vm.changeCommit(item)}}},[_c('span',[_vm._v(_vm._s(item.dateCalendar))]),_c('span',{staticClass:\"is-small\"},[_vm._v(_vm._s(item.commitAbbr))])])])}))])]),_c('div',{staticClass:\"column\"},[_c('div',{staticClass:\"history\"},[_c('div',{staticClass:\"history-title\"},[_vm._v(_vm._s(_vm.currentPath))]),_c('div',{staticClass:\"history-info\"},[_c('div',{staticClass:\"columns\"},[_c('div',{staticClass:\"column history-info-meta\"},[_c('p',[_c('i',{staticClass:\"nc-icon-outline ui-1_calendar-check-62\"}),_c('span',[_vm._v(_vm._s(_vm.$t('history.timestamp'))+\": \"),_c('strong',[_vm._v(_vm._s(_vm.current.dateFull))])])]),_c('p',[_c('i',{staticClass:\"nc-icon-outline i nc-icon-outline users_man-23\"}),_c('span',[_vm._v(_vm._s(_vm.$t('history.author'))+\": \"),_c('strong',[_vm._v(_vm._s(_vm.current.name)+\" <\"+_vm._s(_vm.current.email)+\">\")])])]),_c('p',[_c('i',{staticClass:\"nc-icon-outline media-1_flash-21\"}),_c('span',[_vm._v(_vm._s(_vm.$t('history.commit'))+\": \"),_c('strong',[_vm._v(_vm._s(_vm.current.commit))])])])]),_c('div',{staticClass:\"column history-info-actions\"},[_c('div',{staticClass:\"button-group\"},[_c('button',{staticClass:\"button is-blue-grey\",on:{\"click\":_vm.compareWith}},[_c('i',{staticClass:\"nc-icon-outline design_path-intersect\"}),_c('span',[_vm._v(_vm._s(_vm.$t('history.comparewith')))])]),_c('button',{staticClass:\"button is-blue-grey\",on:{\"click\":_vm.view}},[_c('i',{staticClass:\"nc-icon-outline ui-1_eye-17\"}),_c('span',[_vm._v(_vm._s(_vm.$t('history.view')))])]),_c('button',{staticClass:\"button is-blue-grey\",on:{\"click\":_vm.revertToVersion}},[_c('i',{staticClass:\"nc-icon-outline arrows-4_undo-29\"}),_c('span',[_vm._v(_vm._s(_vm.$t('history.reverttoversion')))])])]),_c('toggle',{staticClass:\"is-dark\",attrs:{\"desc\":_vm.$t(\"history.sidebyside\")},model:{value:(_vm.sidebyside),callback:function ($$v) {_vm.sidebyside=$$v},expression:\"sidebyside\"}})],1)])]),_c('div',{staticClass:\"history-diff\",attrs:{\"id\":\"diff\"}})])])])])}\n_p.staticRenderFns = [  ];\nvar _e = {}; _v(_e); Object.assign(_e.default.options||_e.default, _p)\nmodule.exports = _e\n    ",
dependencies: [],
sourceMap: {},
headerContent: undefined,
mtime: 1548128996000,
devLibsRequired : undefined
};