module.exports = { contents: "var _p = {};\nvar _v = function(exports){\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    name: 'tree',\n    data: function () {\n        return {\n            tree: []\n        };\n    },\n    methods: {\n        fetch: function (basePath) {\n            var self = this;\n            self.$store.dispatch('startLoading');\n            self.$nextTick(function () {\n                socket.emit('treeFetch', { basePath: basePath }, function (data) {\n                    if (self.tree.length > 0) {\n                        var branch = self._.last(self.tree);\n                        branch.hasChildren = true;\n                        self._.find(branch.pages, { _id: basePath }).isActive = true;\n                    }\n                    self.tree.push({\n                        hasChildren: false,\n                        pages: data\n                    });\n                    self.$store.dispatch('stopLoading');\n                });\n            });\n        },\n        goto: function (entryPath) {\n            window.location.assign(siteRoot + '/' + entryPath);\n        },\n        unfold: function (entryPath) {\n            var self = this;\n            var lastIndex = 0;\n            self._.forEach(self.tree, function (branch) {\n                lastIndex++;\n                if (self._.find(branch.pages, { _id: entryPath }) !== undefined) {\n                    return false;\n                }\n            });\n            self.tree = self._.slice(self.tree, 0, lastIndex);\n            var branch = self._.last(self.tree);\n            branch.hasChildren = false;\n            branch.pages.forEach(function (page) {\n                page.isActive = false;\n            });\n        },\n        mainAction: function (page) {\n            var self = this;\n            if (page.isActive) {\n                self.unfold(page._id);\n            }\n            else if (page.isDirectory) {\n                self.fetch(page._id);\n            }\n            else {\n                self.goto(page._id);\n            }\n        }\n    },\n    mounted: function () {\n        var basePath = window.location.pathname.slice(0, -4);\n        if (basePath.length > 1) {\n            basePath = basePath.slice(1);\n        }\n        this.fetch(basePath);\n    }\n};\n\n};\n_p.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"has-collapsable-nav\"},_vm._l((_vm.tree),function(treeItem){return _c('ul',{staticClass:\"collapsable-nav\",class:{ \"has-children\": treeItem.hasChildren }},_vm._l((treeItem.pages),function(page){return _c('li',{class:{ \"is-active\": page.isActive }},[_c('a',{on:{\"click\":function($event){_vm.mainAction(page)}}},[(page._id !== \"home\")?[_c('i',{class:{ \"icon-folder2\": page.isDirectory, \"icon-file-text-o\": !page.isDirectory }}),_c('span',[_vm._v(_vm._s(page.title))])]:[_c('i',{staticClass:\"icon-home\"}),_c('span',[_vm._v(_vm._s(_vm.$t('nav.home')))])]],2),(page.isDirectory && page.isEntry)?_c('a',{staticClass:\"is-pagelink\",on:{\"click\":function($event){_vm.goto(page._id)}}},[_c('i',{staticClass:\"icon-file-text-o\"}),_c('i',{staticClass:\"icon-arrow-right2\"})]):_vm._e()])}))}))}\n_p.staticRenderFns = [  ];\nvar _e = {}; _v(_e); Object.assign(_e.default.options||_e.default, _p)\nmodule.exports = _e\n    ",
dependencies: [],
sourceMap: {},
headerContent: undefined,
mtime: 1548128996000,
devLibsRequired : undefined
};