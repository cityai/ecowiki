---
version: '3'
services:
  wikidb:
    image: mongo:3
    expose:
      - '27017'
    command: '--smallfiles --bind_ip ::,0.0.0.0'
    environment:
      - 'MONGO_LOG_DIR=/dev/null'
  wikijs:
    image: 'requarks/wiki:latest'
    links:
      - wikidb
    depends_on:
      - wikidb
    expose: [3001]
    environment:
      WIKI_ADMIN_EMAIL: admin@example.com
      HOST: ${HOST}
    volumes:
      - ./config.yml:/var/wiki/config.yml
      - ./content:/var/wiki/repo
      - ./assets:/var/wiki/assets
      - ./server:/var/wiki/server
      - ./client:/var/wiki/client
      - ./wikiData:/var/wiki/wikiData:rw
    labels:
      - "traefik.enable=true"
      - "traefik.backend=api"
      - "traefik.port=3001"
      - "traefik.frontend.rule=PathPrefix:/"
  traefik:
    image: traefik
    command: --web --docker --docker.domain=docker.localhost --logLevel=${LEVEL}
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/traefik/.htpasswd:/.htpasswd
      - ./docker/traefik/traefik.toml:/traefik.toml
  python:
    image: python
    build: ./docker/python
    environment:
      MEETUP_KEY: ${MEETUP_KEY}
      CRUNCHBASE_KEY : ${CRUNCHBASE_KEY}
    volumes:
      - ./app:/usr/src/app
      - ./content:/usr/src/content
    stdin_open: true
    tty: true
  
  mongo: 
    container_name: mongo
    image: mongo
    # volumes:
    #   - ./db/data:/db/data
    expose: 
      - '27017'
    command: '--bind_ip ::,0.0.0.0'
    networks: 
      - webappnetwork
  app: 
    container_name: ecowiki-api_app 
    restart: always
    build: ../ecowiki-api
    volumes:
      - ../ecowiki/wikiData:/data:rw
      - ../ecowiki/content:/content:rw
    ports: 
      - "3000:3000"
    links:
      - mongo
    depends_on: 
      - mongo
    networks: 
      - webappnetwork
networks: 
  webappnetwork:
    driver: bridge
volumes:
  wikiData:
